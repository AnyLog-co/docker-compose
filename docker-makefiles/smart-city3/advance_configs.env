#--- Directories ---
# AnyLog Root Path
ANYLOG_PATH=/app
# !local_scripts: ${ANYLOG_HOME}/deployment-scripts/scripts
LOCAL_SCRIPTS=/app/deployment-scripts/node-deployment
# !test_dir: ${ANYLOG_HOME}/deployment-scripts/test
TEST_DIR=/app/deployment-scripts/test

#--- General ---
# Coordinates of the machine - used by Grafana to map the network
#LOCATION=""
# Country where machine is located
#COUNTRY=""
# State where machine is located
#STATE=""
# City where machine is located
#CITY=""

#--- Networking ---
# Declare Policy name
CONFIG_NAME=operator-smart-city-configs
# Overlay IP address - if set, will replace local IP address when connecting to network#
#OVERLAY_IP=10.10.1.215
# Configurable (local) IP address that can be used when behind a proxy, or using Kubernetes for static IP
#PROXY_IP=""
# Port value to be used as an MQTT broker, or some other third-party broker
#ANYLOG_BROKER_PORT=32150
# The number of concurrent threads supporting HTTP requests.	
TCP_THREADS=6
# Timeout in seconds to determine a time interval such that if no response is being returned during the time interval, the system returns timeout error.
REST_TIMEOUT=30
# The number of concurrent threads supporting HTTP requests.	
REST_THREADS=6
# A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs)
BROKER_BIND=false
# The number of concurrent threads supporting broker requests.	
BROKER_THREADS=6

#--- Database ---
# Whether to enable NoSQL logical database
ENABLE_NOSQL=false
# Physical database type
NOSQL_TYPE=mongo
# Username for SQL database connection
NOSQL_USER=admin
# Password correlated to database user
NOSQL_PASSWD=passwd
# Database IP address
NOSQL_IP=127.0.0.1
# Database port number
NOSQL_PORT=27017
# Store blobs in database
BLOBS_DBMS=true
# Whether (re)store a blob if already exists
BLOBS_REUSE=true


#--- Blockchain ---
# How often to sync from blockchain
# SYNC_TIME=60 second
# Source of where the data is metadata stored/coming from. This can either be master for "local" install or specific
# blockchain network to be used (ex. optimism)
# BLOCKCHAIN_SOURCE=optimism

# SubQuery network participant who is responsible for serving RPC queries for blockchain data to their customers
# PROVIDER=https://optimism-sepolia.infura.io/v3/532f565202744c0cb7434505859efb74
# Blockchain smart contract ID
# CONTRACT=0x9D06a1C73EEA7Dd2EdE6f67d69713b8c44c9B223
# Wallet ID
# CHAIN_ID=11155420



#--- Operator ---
# Operator ID
MEMBER=""
# Whether of not to enable HA against the cluster
ENABLE_HA=true
# How many days back to sync between nodes
START_DATE=30
# Whether to enable partitioning
ENABLE_PARTITIONS=true
# Which tables to partition
TABLE_NAME=*
# Which timestamp column to partition by
PARTITION_COLUMN=timestamp
# Time period to partition by
PARTITION_INTERVAL=day
# How many partitions to keep
PARTITION_KEEP=10
# How often to check if an old partition should be removed
PARTITION_SYNC=7 day
# How many threads to use in the operator process
OPERATOR_THREADS=3

#--- MQTT ---
# Whether to enable MQTT logging process
MQTT_LOG=false
# IP address of MQTT broker
MQTT_BROKER=driver.cloudmqtt.com
# Port associated with MQTT broker
MQTT_PORT=18785
# User associated with MQTT broker
MQTT_USER=ibglowct
# Password associated with MQTT user
MQTT_PASSWD=MSY4e009J7ts
# Topic to get data for
MQTT_TOPIC=anylogedgex-demo
# Logical database name
MQTT_DBMS=new_company
# Table where to store data
MQTT_TABLE=bring [sourceName]
# Timestamp column name
MQTT_TIMESTAMP_COLUMN=now
# Value column name
MQTT_VALUE_COLUMN=bring [readings][][value]
# Column value type
MQTT_VALUE_COLUMN_TYPE=int

#--- Advanced Settings ---
# Whether to automatically run a local (or personalized) script at the end of the process
DEPLOY_LOCAL_SCRIPT=true
# Deploy a process to accept syslog data
DEPLOY_SYSLOG=true
# Compress JSON and SQL file(s) backup
COMPRESS_FILE=true
# Number of parallel queries
QUERY_POOL=6
# When data comes in write to database immediately, as opposed to waiting for a full buffer
WRITE_IMMEDIATE=false
# If buffer is not full, how long to wait until pushing data through
THRESHOLD_TIME=60 seconds
# Buffer size to reach, at which point data is pushed through
THRESHOLD_VOLUME=10KB

#--- Nebula ---
# whether to enable Lighthouse
ENABLE_NEBULA=false
# create new nebula keys
NEBULA_NEW_KEYS=false
# whether node is type lighthouse
IS_LIGHTHOUSE=false
# Nebula CIDR IP address for itself - the IP component should be the same as the #OVERLAY_IP (ex. 10.10.1.15/24)
CIDR_OVERLAY_ADDRESS=10.10.1.1/24
# Nebula IP address for Lighthouse node (ex. 10.10.1.15)
LIGHTHOUSE_IP=10.10.1.1
# External physical IP of the node associated with Nebula lighthouse
LIGHTHOUSE_NODE_IP=172.233.108.122

