#--- General ---
# AnyLog License Key
LICENSE_KEY=5f32adfe5c7d545d13b11792b61675056289455763fe1a596f0ac9feda7c7237c96c00e96c5532895bf198641ed7d2f834649ff528132b83d8bf9b54db18fb1b5d6dad256eba8b315bdcfb1c4e549b45ba94bd787205cd60d824d9f9636868d4b43fc37cacbec87b2127eda72cd8498921d58499fd9a12e848d9b4764dcceefa{'company':'Guest','expiration':'2025-06-30','type':'beta'}
# Information regarding which AnyLog node configurations to enable. By default, even if everything is disabled, AnyLog starts TCP and REST connection protocols
NODE_TYPE=master
# Name of the AnyLog instance
NODE_NAME=anylog-master
# Owner of the AnyLog instance
COMPANY_NAME=Another Peak

#--- Networking ---
# Port address used by AnyLog's TCP protocol to communicate with other nodes in the network
ANYLOG_SERVER_PORT=32048
# Port address used by AnyLog's REST protocol
ANYLOG_REST_PORT=32049
# A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs)
TCP_BIND=false
# A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs)
REST_BIND=false

#--- Database ---
# Physical database type (sqlite or psql)
DB_TYPE=sqlite
# Username for SQL database connection
DB_USER=""
# Password correlated to database user
DB_PASSWD=""
# Database IP address
DB_IP=127.0.0.1
# Database port number
DB_PORT=5432
# Whether to set autocommit data
AUTOCOMMIT=false
# Whether to start to start system_query logical database
SYSTEM_QUERY=false
# Run system_query using in-memory SQLite. If set to false, will use pre-set database type
MEMORY=true

#--- Blockchain ---
#----------------------------------------------------------------------------------------------------------------------#
# Blockchain Layer Configuration
#
# The blockchain layer manages metadata either through a master node or the Optimism platform.
#
# When `BLOCKCHAIN_SOURCE` is set to a platform other than "master" (e.g., "optimism") and `NODE_TYPE` is "master",
# the node will function as a relay between the blockchain and other nodes.
#
# To use a real blockchain:
#   - Set `BLOCKCHAIN_SOURCE` to "optimism".
#   - By default, deployment scripts use AnyLogâ€™s test configurations for an Optimism-based blockchain.
#   - To use your own deployment, update the configurations in the "Real Blockchain" section.
#
# Steps to deploy using a real blockchain:
#   1. Deploy Node A with `BLOCKCHAIN_SOURCE` set to "optimism".
#   2. On Node A, retrieve the contract ID using the AnyLog command: `print !contract_id`.
#   3. Configure Node B with:
#      - `BLOCKCHAIN_SOURCE` set to "optimism"
#      - `CONTRACT` set to the contract ID obtained from Node A.
#   4. Deploy Node B.
#   5. Repeat the process for additional nodes.
#
# Relay-Based Deployment:
#   - Alternatively, users can configure only the master node to interface directly with the blockchain.
#   - Other nodes will sync metadata through the master, instead of communicating with the blockchain directly.
#   - This setup, called a "relay," reduces the need for all nodes to independently interact with the blockchain.
#----------------------------------------------------------------------------------------------------------------------#
# blockchain platform to be used - either master or optimism
BLOCKCHAIN_SOURCE=master
# How often to sync from blockchain
BLOCKCHAIN_SYNC=30 second
# Where will the copy of the blockchain be stored
BLOCKCHAIN_DESTINATION=file
# TCP connection information for Master Node - used for either non-master node relay setup, or pure master node platform
# For Master node, when TCP is bound (TCP_BIND=true) then use the actual (local) IP of the node rather than 127.0.0.1
LEDGER_CONN=127.0.0.1:32048

#---- Real blockchain ---
# SubQuery network participant who is responsible for serving RPC queries for blockchain data to their customers (we're using infura)
PROVIDER = ""
# keys to access crypto wallet
BLOCKCHAIN_PUBLIC_KEY = ""
BLOCKCHAIN_PRIVATE_KEY = ""
# Wallet ID
CHAIN_ID=""
# Contract to work against on the blockchain
CONTRACT=""

#--- Monitoring ---
# Whether to monitor the node or not
MONITOR_NODES=true
# Store monitoring in Operator node(s)
STORE_MONITORING=false

#--- Advanced Settings ---
# Whether to automatically run a local (or personalized) script at the end of the process
DEPLOY_LOCAL_SCRIPT=false
# Run code in debug mode
DEBUG_MODE=false