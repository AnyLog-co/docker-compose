#!/bin/bash

export $(grep -v '^#' docker-makefile/generic-configs/advance_configs.env | xargs)
export $(grep -v '^#' docker-makefile/generic-configs/base_configs.env | xargs)

docker run -it --name anylog-${NODE_TYPE} \
   --network host \
   --cap-add=NET_ADMIN \
   --device=/dev/net/tun:/dev/net/tun \
   -e INIT_TYPE=prod \
   -e LICENSE_KEY="$LICENSE_KEY" \
   -e NODE_TYPE="$NODE_TYPE" \
   -e NODE_NAME="$NODE_NAME" \
   -e COMPANY_NAME="$COMPANY_NAME" \
   -e ANYLOG_SERVER_PORT="$ANYLOG_SERVER_PORT" \
   -e ANYLOG_REST_PORT="$ANYLOG_REST_PORT" \
   -e ANYLOG_BROKER_PORT="$ANYLOG_BROKER_PORT" \
   -e TCP_BIND="$TCP_BIND" \
   -e REST_BIND="$REST_BIND" \
   -e BROKER_BIND="$BROKER_BIND" \
   -e DB_TYPE="$DB_TYPE" \
   -e DB_USER="$DB_USER" \
   -e DB_PASSWD="$DB_PASSWD" \
   -e DB_IP="$DB_IP" \
   -e DB_PORT="$DB_PORT" \
   -e AUTOCOMMIT="$AUTOCOMMIT" \
   -e SYSTEM_QUERY="$SYSTEM_QUERY" \
   -e MEMORY="$MEMORY" \
   -e ENABLE_NOSQL="$ENABLE_NOSQL" \
   -e NOSQL_TYPE="$NOSQL_TYPE" \
   -e NOSQL_USER="$NOSQL_USER" \
   -e NOSQL_PASSWD="$NOSQL_PASSWD" \
   -e NOSQL_IP="$NOSQL_IP" \
   -e NOSQL_PORT="$NOSQL_PORT" \
   -e BLOBS_DBMS="$BLOBS_DBMS" \
   -e BLOBS_REUSE="$BLOBS_REUSE" \
   -e LEDGER_CONN="$LEDGER_CONN" \
   -e ENABLE_MQTT="$ENABLE_MQTT" \
   -e MQTT_BROKER="$MQTT_BROKER" \
   -e MQTT_PORT="$MQTT_PORT" \
   -e MQTT_USER="$MQTT_USER" \
   -e MQTT_PASSWD="$MQTT_PASSWD" \
   -e MQTT_LOG="$MQTT_LOG" \
   -e MSG_TOPIC="$MSG_TOPIC" \
   -e MSG_DBMS="$MSG_DBMS" \
   -e MSG_TABLE="$MSG_TABLE" \
   -e MSG_TIMESTAMP_COLUMN="$MSG_TIMESTAMP_COLUMN" \
   -e MSG_VALUE_COLUMN="$MSG_VALUE_COLUMN" \
   -e MSG_VALUE_COLUMN_TYPE="$MSG_VALUE_COLUMN_TYPE" \
   -e MONITOR_NODES="$MONITOR_NODES" \
   -e STORE_MONITORING="$STORE_MONITORING" \
   -e SYSLOG_MONITORING="$SYSLOG_MONITORING" \
   -e DEPLOY_LOCAL_SCRIPT="$DEPLOY_LOCAL_SCRIPT" \
   -e DEBUG_MODE="$DEBUG_MODE" \
   -e ANYLOG_PATH="$ANYLOG_PATH" \
   -e LOCAL_SCRIPTS="$LOCAL_SCRIPTS" \
   -e TEST_DIR="$TEST_DIR" \
   -e DISABLE_CLI="$DISABLE_CLI" \
   -e REMOTE_CLI="$REMOTE_CLI" \
   -e GRAFANA="$GRAFANA" \
   -e LOCATION="$LOCATION" \
   -e COUNTRY="$COUNTRY" \
   -e STATE="$STATE" \
   -e CITY="$CITY" \
   -e OVERLAY_IP="$OVERLAY_IP" \
   -e TCP_THREADS="$TCP_THREADS" \
   -e REST_TIMEOUT="$REST_TIMEOUT" \
   -e REST_THREADS="$REST_THREADS" \
   -e BROKER_THREADS="$BROKER_THREADS" \
   -e SYNC_TIME="$SYNC_TIME" \
   -e BLOCKCHAIN_SOURCE="$BLOCKCHAIN_SOURCE" \
   -e BLOCKCHAIN_DESTINATION="$BLOCKCHAIN_DESTINATION" \
   -e MEMBER="$MEMBER" \
   -e START_DATE="$START_DATE" \
   -e ENABLE_PARTITIONS="$ENABLE_PARTITIONS" \
   -e TABLE_NAME="$TABLE_NAME" \
   -e PARTITION_COLUMN="$PARTITION_COLUMN" \
   -e PARTITION_INTERVAL="$PARTITION_INTERVAL" \
   -e PARTITION_KEEP="$PARTITION_KEEP" \
   -e PARTITION_SYNC="$PARTITION_SYNC" \
   -e COMPRESS_FILE="$COMPRESS_FILE" \
   -e QUERY_POOL="$QUERY_POOL" \
   -e WRITE_IMMEDIATE="$WRITE_IMMEDIATE" \
   -e THRESHOLD_TIME="$THRESHOLD_TIME" \
   -e THRESHOLD_VOLUME="$THRESHOLD_VOLUME" \
   -e ENABLE_NEBULA="$ENABLE_NEBULA" \
   -e NEBULA_NEW_KEYS="$NEBULA_NEW_KEYS" \
   -e IS_LIGHTHOUSE="$IS_LIGHTHOUSE" \
   -e CIDR_OVERLAY_ADDRESS="$CIDR_OVERLAY_ADDRESS" \
   -e LIGHTHOUSE_IP="$LIGHTHOUSE_IP" \
   -e LIGHTHOUSE_NODE_IP="$LIGHTHOUSE_NODE_IP" \
   -v anylog-${ANYLOG_TYPE}-anylog:/app/AnyLog-Network/anylog \
   -v anylog-${ANYLOG_TYPE}-blockchain:/app/AnyLog-Network/blockchain \
   -v anylog-${ANYLOG_TYPE}-data:/app/AnyLog-Network/data \
   -v anylog-${ANYLOG_TYPE}-local-scripts:/app/deployment-scripts \
   -v nebula-overlay:/app/nebula \
--restart unless-stopped --rm anylogco/anylog-network:latest