metadata:
  # Kubernetes Instance namespace
  namespace: default
  # hostname for deployment
  hostname: anylog-master
  # Pod application name
  pod_name: anylog-master-pod
  # Kubernetes deployment name
  deployment_name: anylog-master-deployment
  # Kubernetes service name
  service_name: anylog-master-service
  # Configuration file mapping name
  configmap_name: anylog-master-configmap
  # Allows running Kubernetes remotely. If commented out, code will ignore it
  node_selector: ""
image:
  # Image secret naming
  secret_name: imagepullsecret
  # (Docker Hub) Image Path
  repository: anylogco/anylog-network
  # Image version
  tag: test-arm64
  # Image pulling policy
  pull_policy: Always # IfNotPresent
  # whether to deploy AnyLog (prod) or a linux cli (bash) with AnyLog installed, but not running
  init_type: prod

volume:
  # Whether to enable volumes for AnyLog
  enable_volume: true
  anylog_volume:     # volume name: {.Values.metadata.deployment_name}-anylog-dir
    # Volume name associated with anylog directory
    volume_name: anylog-master-anylog-dir
    volume_name_pvc: anylog-master-anylog-dir-pvc
  blockchain_volume:     # volume name: {.Values.metadata.deployment_name}-blockchain-dir
    # Volume name associated with blockchain directory
    volume_name: anylog-master-blockchain-dir
    volume_name_pvc: anylog-master-blockchain-dir-pvc
  data_volume:     # volume name: {.Values.metadata.deployment_name}-data-dir
    # Volume name associated with data directory
    volume_name: anylog-master-data-dir
    volume_name_pvc: anylog-master-data-dir-pvc
#  local_scripts: # volume name: {.Values.metadata.deployment_name}-local-scripts
#    # AnyLog local scripts directory path
#    path: /app/deployment-scripts/node-deployment
#    # Volume access mode
#    access_mode: ReadWriteOnce
#    # Volume storage size
#    storage_size: 1Gi
#  test_scripts: # volume name: {.Values.metadata.deployment_name}-tests
#    # AnyLog test cases directory path
#    path: /app/deployment-scripts/test
#    # Volume access mode
#    access_mode: ReadWriteOnce
#    # Volume storage size
#    storage_size: 1Gi

node_configs:
  general:
    # AnyLog License Key
    LICENSE_KEY: b7133573e398615da8fb419aedfa51af90307c9c3b1a2278561cf7e1040ade3b4a40cc8263724f9128de96198c13a447b1bd49b972f7e7bb37e6d3152d8ef139ed18514e6aa2038793e80068f586c12aee70718f43a5bfa901bf94844bf1a94087155f83c49980775518ace2de986af25ee2c5e5a0efc2833d16078aad9e28642024-02-01bGuest
    # Information regarding which AnyLog node configurations to enable. By default, even if everything is disabled, AnyLog starts TCP and REST connection protocols
    NODE_TYPE: master
    # Name of the AnyLog instance
    NODE_NAME: anylog-master
    # Owner of the Anylog instance
    COMPANY_NAME: New Company

  networking:
    # Port address used by AnyLog's TCP protocol to communicate with other nodes in the network
    ANYLOG_SERVER_PORT: 32048
    # Port address used by AnyLog's REST protocol
    ANYLOG_REST_PORT: 32049
    PROXY_IP: 10.0.0.251

  blockchain:
    # TCP connection information for Master Node
    LEDGER_CONN: 127.0.0.1:32048

  monitoring:
    # Whether to monitor the node or not
    MONITOR_NODES: true
    # Which node type to send monitoring information to
    MONITOR_NODE: query
    # Company node is associated with the monitor node
    MONITOR_NODE_COMPANY: New Company