directories:
  # AnyLog Root Path
  ANYLOG_PATH: /app
  # !local_scripts: ${ANYLOG_HOME}/deployment-scripts/scripts
  LOCAL_SCRIPTS: /app/deployment-scripts/scripts
  # !test_dir: ${ANYLOG_HOME}/deployment-scripts/tests
  TEST_DIR: /app/deployment-scripts/tests

geolocation:
  # Coordinates of the machine - used by Grafana to map the network
  LOCATION: ""
  # Country where machine is located
  COUNTRY: ""
  # State where machine is located
  STATE: ""
  # City where machine is located
  CITY: ""

networking:
  # Declare Policy name
  CONFIG_NAME: ""
  # Overlay IP address - if set, will replace local IP address when connecting to network
  OVERLAY_IP: ""
  # Configurable (local) IP address that can be used when behind a proxy, or using Kubernetes for static IP
  PROXY_IP: ""
  # The number of concurrent threads supporting HTTP requests.
  TCP_THREADS: 6
  # Timeout in seconds to determine a time interval such that if no response is being returned during the time interval, the system returns timeout error.
  REST_TIMEOUT: 30
  # The number of concurrent threads supporting HTTP requests.
  REST_THREADS: 6
  # The number of concurrent threads supporting broker requests.
  BROKER_THREADS: 6

database:
  # Whether to start system_query logical database
  SYSTEM_QUERY: true
  # Run system_query using in-memory SQLite. If set to false, will use pre-set database type
  MEMORY: true

blockchain:
  # How often to sync from blockchain
  SYNC_TIME: 30 second
  # Source of where the data is coming from
  BLOCKCHAIN_SOURCE: master
  # Where will the copy of the blockchain be stored
  BLOCKCHAIN_DESTINATION: file

advance_settings:
  # Compress JSON and SQL file(s) backup
  COMPRESS_FILE: false
  # Number of parallel queries
  QUERY_POOL: 6
  # When data comes in write to database immediately, as opposed to waiting for a full buffer
  WRITE_IMMEDIATE: false
  # If buffer is not full, how long to wait until pushing data through
  THRESHOLD_TIME: 60 seconds
  # Buffer size to reach, at which point data is pushed through
  THRESHOLD_VOLUME: 10KB
  # Which node type to send monitoring information to
  MONITOR_NODE: query

nebula:
  # whether to enable Lighthouse
  ENABLE_NEBULA: false
  # whether node is type lighthouse
  IS_LIGHTHOUSE: false
  # Nebula IP address for Lighthouse node
  LIGHTHOUSE_IP: ""
  # External physical IP of the node associated with Nebula lighthouse
  LIGHTHOUSE_NODE_IP: ""
