services:
  anylog-${NODE_TYPE}:
    image: ${IMAGE}:${TAG}
    restart: always
    env_file:
      - ../docker-makefile/${ANYLOG_PATH}/base_configs.env
      - ../docker-makefile/${ANYLOG_PATH}/advance_configs.env
      - .env
    container_name: ${NODE_NAME}
    stdin_open: true
    tty: true
    network_mode: host
    cap_add:
      - NET_ADMIN  # Adding network administration capabilities for TUN device
    devices:
      - "/dev/net/tun:/dev/net/tun"  # Adding the TUN device to the container
    volumes:
      - ${NODE_NAME}-anylog:/app/AnyLog-Network/anylog
      - ${NODE_NAME}-blockchain:/app/AnyLog-Network/blockchain
      - ${NODE_NAME}-data:/app/AnyLog-Network/data
      - ${NODE_NAME}-local-scripts:/app/deployment-scripts
      - nebula-overlay:/app/nebula
      - remote-cli-current:/app/Remote-CLI/djangoProject/static/blobs/current/

  remote-cli:
    image: anylogco/remote-cli:latest
    container_name: remote-cli
    restart: always
    stdin_open: true
    tty: true
    network_mode: host
    environment:
      - CONN_IP=0.0.0.0  # Allow connections from all interfaces
      - CLI_PORT=31800
    volumes:
      - remote-cli:/app/Remote-CLI/djangoProject/static/json
      - remote-cli-current:/app/Remote-CLI/djangoProject/static/blobs/current/
      - nebula-overlay:/app/nebula
volumes:
  ${NODE_NAME}-anylog:
  ${NODE_NAME}-blockchain:
  ${NODE_NAME}-data:
  ${NODE_NAME}-local-scripts:
  nebula-overlay:
  remote-cli:
  remote-cli-current:
